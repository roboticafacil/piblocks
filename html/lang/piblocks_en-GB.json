{
	"langs": {
		"en-GB": {
			"keys": {
				"LANG_CATEGORY_PROCEDURES": "Functions",
				"LANG_CATEGORY_CONTROLS": "Control",
				"LANG_CATEGORY_MATH": "Math",
				"LANG_CATEGORY_LIST": "List",
				"LANG_CATEGORY_ADVANCED": "Basic I/O",
				"LANG_CATEGORY_SCREEN": "Screen",
				"LANG_CATEGORY_LOGIC": "Logic",
				"LANG_CATEGORY_COMMUNICATION": "Communication",
				"LANG_CATEGORY_TEXT": "Text",
				"LANG_CATEGORY_VARIABLES": "Variables",
				"LANG_CATEGORY_SOUND": "Sound",
				"LANG_CATEGORY_DISTANCE": "Distance",
				"LANG_CATEGORY_LIGHT": "Light",
				"LANG_CATEGORY_MOVEMENT": "Movement",
				"LANG_CATEGORY_AMBIENT": "Environment",
				"LANG_PROCEDURES_DEFNORETURN_TOOLTIP": "A procedure (no return value).",
				"LANG_PROCEDURES_DEFRETURN_PROCEDURE": "function",
				"LANG_VARIABLES_TYPE_NUMBER": "Number",
				"LANG_VARIABLES_TYPE_BOOLEAN": "Binary",
				"LANG_VARIABLES_TYPE_STRING": "Text",
				"LANG_PROCEDURES_DEFRETURN_TOOLTIP": "A function with a return value.",
				"LANG_PROCEDURES_CALLNORETURN_TOOLTIP": "Calls a procedure.",
				"LANG_PROCEDURES_DEFNORETURN_PROCEDURE": "procedure",
				"LANG_PROCEDURES_CALL_WITHOUT_DEFINITION": "Procedure call without matching definition",
				"LANG_PROCEDURES_CALL_WITHOUT_DEFINITION2": "Function call without matching definition",
				"LANG_PROCEDURES_CALLRETURN_TOOLTIP": "Calls a function.",
				"LANG_PROCEDURES_MUTATORCONTAINER_Field": "arguments",
				"LANG_CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this 'if' block.",
				"LANG_CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition 'else if' to the 'if' block.",
				"LANG_CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all 'else' condition to the 'if' block.",
				"LANG_LIST_RANGE_TOOLTIP": "Returns a range",
				"LANG_LIST_CONSTRUCTOR_TOOLTIP": "Creates a list with variable items",
				"LANG_LIST_CONSTRUCTOR_ITEM_TOOLTIP": "Item",
				"LANG_LIST_CONSTRUCTOR2_TOOLTIP": "Creates a list with two items",
				"LANG_LIST_CONSTRUCTOR3_TOOLTIP": "Creates a list with three items",
				"LANG_LIST_CONSTRUCTOR4_TOOLTIP": "Creates a list with four items",
				"LANG_LIST_SUBLIST_TOOLTIP": "Returns a sub-list (for the given range)",
				"LANG_LIST_IN_TOOLTIP": "Returns true if the element is in the list",
				"LANG_TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
				"LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
				"LANG_TEXT_SUBSTRING_TOOLTIP": "Gets the sub-string for the given range",
				"LANG_BLUETOOTH_APP_TOOLTIP": "Receive commands through Bluetooth module",
				"LANG_BLUETOOTH_COMMAND_TOOLTIP": "Receive a command through Bluetooth module",
				"LANG_CONTROLS_SETUP_LOOP_TOOLTIP": "Blocks in setup will be executed at start, and blocks in Loop will be repeated continuously.",
				"LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "while",
				"LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "until",
				"LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While the condition is true, then do the statements.",
				"LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While the condition is false, then do the statements.",
				"LANG_CONTROLS_FOR_TOOLTIP": "Counts from one to the given number. On each iteration, a variable 'iteration' increases its value.",
				"LANG_CONTROLS_BREAK_TOOLTIP": "Exits (breaks) from a loop",
				"LANG_CONTROLS_FOR_LOOP_WARNING4": "Missing input",
				"LANG_CONTROLS_IF_MSG_IF": "if",
				"LANG_CONTROLS_IF_MSG_THEN": "do",
				"LANG_CONTROLS_IF_TOOLTIP_1": "If the condition is true, execute the statements.",
				"LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF": "else if",
				"LANG_CONTROLS_IF_ELSE_Field_ELSE": "else",
				"LANG_CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
				"LANG_CONTROLS_BASE_DELAY_TOOLTIP": "Waits the specified time in milliseconds (ms)",
				"LANG_LOGIC_BOOLEAN_TRUE": "true",
				"LANG_LOGIC_BOOLEAN_FALSE": "false",
				"LANG_LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
				"LANG_LOGIC_COMPARE_TOOLTIP_EQ": "Checks if both inputs are equal.",
				"LANG_LOGIC_COMPARE_TOOLTIP_NEQ": "Checks if both inputs are different.",
				"LANG_LOGIC_COMPARE_TOOLTIP_LT": "Checks if the first input is smaller than the second one.",
				"LANG_LOGIC_COMPARE_TOOLTIP_LTE": "Checks if the first input is smaller than or equal to the second one.",
				"LANG_LOGIC_COMPARE_TOOLTIP_GT": "Checks if the first input is greater than the second one.",
				"LANG_LOGIC_COMPARE_TOOLTIP_GTE": "Checks if the first input is greater than or equal to the second one.",
				"LANG_LOGIC_OPERATION_AND": "and",
				"LANG_LOGIC_OPERATION_OR": "or",
				"LANG_LOGIC_OPERATION_XOR": "xor",
				"LANG_LOGIC_OPERATION_SHIFT_LEFT": "<<",
				"LANG_LOGIC_OPERATION_SHIFT_RIGHT": ">>",
				"LANG_LOGIC_OPERATION_TOOLTIP_AND": "Checks if both inputs are true.",
				"LANG_LOGIC_OPERATION_TOOLTIP_OR": "Checks if either inputs are true.",
				"LANG_LOGIC_OPERATION_TOOLTIP_BITWISE_AND": "Bitwise AND operation.",
				"LANG_LOGIC_OPERATION_TOOLTIP_BITWISE_OR": "Bitwise OR operation.",
				"LANG_LOGIC_OPERATION_TOOLTIP_BITWISE_XOR": "Bitwise XOR (exclusive or) operation .",
				"LANG_LOGIC_OPERATION_TOOLTIP_SHIFT_LEFT": "Shifts to the left the amount of bits",
				"LANG_LOGIC_OPERATION_TOOLTIP_SHIFT_RIGHT": "Shifts to the right the amount of bits",
				"LANG_LOGIC_NEGATE_TOOLTIP": "Returns the opposite of the boolean input.",
				"LANG_LOGIC_BITWISE_NEGATE_TOOLTIP": "Returns the bitwise negate of a number",
				"LANG_MATH_NUMBER_TOOLTIP": "Number",
				"LANG_MATH_ARITHMETIC_TOOLTIP": "Arithmetic operation",
				"LANG_MATH_SELF_ARITHMETIC_TOOLTIP": "Arithmetic operation on a variable",
				"LANG_MATH_BASE_MAP_TOOLTIP": "Re-scales the input from [0-1023] to another range.",
				"LANG_MATH_MINMAX_TOOLTIP": "Min/max operation between two numbers",
				"LANG_ADVANCED_MATH_RANDOM_TOOLTIP": "Returns a random number between the two limits.",
				"LANG_VARIABLES_GET_TOOLTIP": "Returns the value of a variable.",
				"LANG_CONTROLS_FOR_LOOP_WARNING5": "Must be used in a 'for' loop instruction",
				"LANG_VARIABLES_SET_TOOLTIP": "Sets the value of a variable.",
				"LANG_VARIABLES_CALL_WITHOUT_DEFINITION": "This variable is not declared.",
				"LANG_VARIABLES_GLOBAL_TOOLTIP": "Creates a variable. The variable can be a number, text, binary or any other type depending on its assignment.",
				"LANG_TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
				"LANG_TEXT_JOIN_TOOLTIP": "Joins text inputs.",
				"LANG_TEXT_LENGTH_TOOLTIP": "Returns number of letters (including spaces) in the provided text.",
				"LANG_TEXT_EQUALSIGNORECASE_TOOLTIP": "Checks if both text inputs are equal, regardless of the case.",
				"LANG_TEXT_LENGTH_LOWER_TOOLTIP": "Returns a text in lower case.",
				"LANG_TEXT_LENGTH_UPPER_TOOLTIP": "Returns a text in upper case.",
				"LANG_TEXT_NUMBER_CAST_TOOLTIP": "Converts the text into a number",
				"LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP": "Reads the value from an analog pin",
				"LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP": "Reads the value from a digital pin",
				"LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP": "Write a value between 0 and 255 to an analog output pin.",
				"LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP": "Write a value in a digital pin",
				"LANG_ADVANCED_BUILTIN_LED_ON": "ON",
				"LANG_ADVANCED_BUILTIN_LED_OFF": "OFF",
				"LANG_ADVANCED_BUILTIN_LED_TOGGLE": "Toggle",
				"LANG_ADVANCED_BUILTIN_LED_TOOLTIP": "Built-in LED that is internally connected to pin 13",
				"LANG_BQ_BUTTON_TOOLTIP": "Reads the value of a button input.",
				"LANG_BQ_BUTTON_LONG_SHORT_TOOLTIP": "Discriminates how long the button is pressed (long click or just a click)",
				"LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP": "Prints data as text.",
				"LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP": "Check whether the USB serial port is available or not",
				"LANG_ADVANCED_SERIAL_PARSE_NUMBER_TOOLTIP": "Returns a number received from the USB serial port",
				"LANG_ADVANCED_SERIAL_READSTRING_TOOLTIP": "Reads text received from USB serial port as text.",
				"LANG_BLUETOOTH_DEF_TOOLTIP": "Bluetooth module configuration",
				"LANG_US_ECHO_PIN": "Echo",
				"LANG_US_TRIGGER_PIN": "Trigger",
				"LANG_US_TOOLTIP": "Returns the distance measured by the ultrasonic sensor.",
				"LANG_US_COLLISION_TOOLTIP": "Detects collision or free cases based on a distance threshold with the ultrasonic sensor",
				"LANG_LED_MATRIX_GENERIC_TOOLTIP": "Builds a generic expression for LED Matrix",
				"LANG_LED_MATRIX_DRAWING_NO_CONNECTION": "No connection",
				"LANG_LED_MATRIX_DRAWING_POOR_CONNECTION": "Poor connection",
				"LANG_LED_MATRIX_DRAWING_GOOD_CONNECTION": "Good connection",
				"LANG_LED_MATRIX_DRAWING_EXCELLECT_CONNECTION": "Excellent connection",
				"LANG_LED_MATRIX_DRAWING_NO_BATTERY": "No battery",
				"LANG_LED_MATRIX_DRAWING_LOW_BATTERY": "Low battery",
				"LANG_LED_MATRIX_DRAWING_MEDIUM_BATTERY": "Medium battery",
				"LANG_LED_MATRIX_DRAWING_FULL_BATTERY": "Full battery",
				"LANG_LED_MATRIX_DRAWING_CORRECT": "Correct",
				"LANG_LED_MATRIX_DRAWING_WRONG": "Wrong",
				"LANG_LED_MATRIX_DRAWING_ARROW_UP": "Arrow up",
				"LANG_LED_MATRIX_DRAWING_ARROW_DOWN": "Arrow down",
				"LANG_LED_MATRIX_DRAWING_ARROW_RIGHT": "Arrow right",
				"LANG_LED_MATRIX_DRAWING_ARROW_LEFT": "Arrow left",
				"LANG_LED_MATRIX_DRAWING_ICONS_TOOLTIP": "Image to show on the LEDs matrix",
				"LANG_LED_MATRIX_DRAWING_TOOLTIP": "LED Matrix drawing",
				"LANG_INFRARED_ANALOG_TOOLTIP": "Returns the analog value measured by the infrared sensor.",
				"LANG_INFRARED_DIGITAL_TOOLTIP": "Returns the digital value measured by the infrared sensor.",
				"LANG_RG_LED_TOOLTIP": "Set a two-state Red/Green LED",
				"LANG_RGB_LED_TOOLTIP": "Set a colour on a RGB LED",
				"LANG_SIMPLEEXPRESSIONS_LED_STRIP_TOOLTIP": "Sets data for a LED strip pixel",
				"LANG_SIMPLEEXPRESSIONS_LED_STRIP_BRIGHTNESS_TOOLTIP": "Sets the LEDs brightness",
				"LANG_PIEZO_BUZZER": "Buzzer",
				"LANG_PIEZO_BUZZER_PIN": "PIN",
				"LANG_PIEZZO_BUZZER_PREDEF_CONNECTION": "Connection",
				"LANG_PIEZZO_BUZZER_PREDEF_DISCONNECTION": "Disconnection",
				"LANG_PIEZZO_BUZZER_PREDEF_BUTTON_PUSHED": "Button pushed",
				"LANG_PIEZZO_BUZZER_PREDEF_MODE1": "Mode 1",
				"LANG_PIEZZO_BUZZER_PREDEF_MODE2": "Mode 2",
				"LANG_PIEZZO_BUZZER_PREDEF_MODE3": "Mode 3",
				"LANG_PIEZO_BUZZER_PREDEF_SOUNDS_TOOLTIP": "Plays some basic sounds with a buzzer.",
				"LANG_PIEZO_BUZZER_MELODY_TOOLTIP": "Plays a melody with a buzzer.",
				"LANG_MUSIC_NOTE_TOOLTIP": "Music note. Combine it to create a melody.",
				"LANG_SERVO_CONT_TOOLTIP": "Moves a continuous rotation servo.",
				"LANG_SERVO_DC_MOTOR_TOOLTIP": "Moves a DC motor.",
				"LANG_SERVO_MOVE_TOOLTIP": "Moves a servo between 0~180 degrees.",
				"LANG_TEMP_REQUEST_AND_READ_TEMP_TOOLTIP": "Reads temperature from 18B20 sensor in Celsius degrees.",
				"LANG_HUMID_READ_HUMID_DHT_TOOLTIP": "Reads humidity from DHT11 sensor in %.",
				"LANG_TEMP_READ_TEMP_DHT_TOOLTIP": "Reads temperature from DHT11 sensor in Celcius degrees.",
				"LANG_RAINDROP_ANALOG_TOOLTIP": "Reads the quatity of rain (with the analog signal returns a value between 0 and 1023).",
				"LANG_RAINDROP_DIGITAL_TOOPTIP": "Detects water precense or rain (adjust level with the potentiometer).",
				"LANG_GAS_ANALOG_READ_TOOLTIP": "Reads the analog output of a gas sensor.",
				"LANG_GAS_DIGITAL_READ_TOOLTIP": "Reads the digital output of a gas sensor (adjust level with the potentiometer).",
				"LANG_PRESSURE_READ_PRESSURE_BMP_TOOLTIP": "Reads barometric pressure with a BMP180 sensor in Pa.",
				"LANG_TEMP_READ_TEMP_BMP_TOOLTIP": "Reads temperature with BMP180 sensor in Celsius degrees.",
				"LANG_ALTITUDE_READ_ALTITUDE_BMP_TOOLTIP": "Estimates altitude. Estimated sea-level preassure is 101325 Pa."
			}
		}
	}
}